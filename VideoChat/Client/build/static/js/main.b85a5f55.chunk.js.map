{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInLine","muted","ref","autoPlay","Notifications","style","display","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","console","log","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","positions","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b85a5f55.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('https://video-chat-app-nv.herokuapp.com/');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia ({ video: true, audio: true})\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n                 \r\n                 myVideo.current.srcObject = currentStream;\r\n            });\r\n\r\n         socket.on('me', (id) => setMe(id));\r\n\r\n         socket.on('calluser', ({ from, name: callerName, signal}) => {\r\n             setCall({ isReceivedCall: true, from, name: callerName, signal})\r\n         });\r\n     }, []);\r\n     \r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true)\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream});\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answercall', {signal: data, to: call.from});\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream});\r\n\r\n         peer.on('signal', (data) => {\r\n            socket.emit('calluser', { userToCall: id, signalData: data, from: me, name});\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callaccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n        call,\r\n        callAccepted,\r\n        myVideo,\r\n        userVideo,\r\n        stream,\r\n        name,\r\n        setName,\r\n        callEnded,\r\n        me,\r\n        callUser,\r\n        leaveCall,\r\n        answerCall,\r\n        }}>\r\n\r\n        {children}\r\n\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\r\nimport { Grid, Typography, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles(( theme ) => ({\r\n     video: {\r\n    width: '550px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '300px',\r\n    },\r\n  },\r\n  gridContainer: {\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: '10px',\r\n    border: '2px solid black',\r\n    margin: '10px',\r\n  },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n    <Grid container className={classes.gridContainer}>\r\n        {/* Our own video */}\r\n        {stream && (\r\n            <Paper className={classes.paper}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\r\n                    <video playsInLine muted ref={myVideo} autoPlay className={classes.video} />\r\n                </Grid>\r\n            </Paper>\r\n        )}\r\n        {/* User's video */}\r\n        {callAccepted && !callEnded && (\r\n            <Paper className={classes.paper}>\r\n                <Grid item xs={12} md={6}>\r\n                   <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\r\n                   <video playsInLine ref={userVideo} autoPlay className={classes.video} />\r\n                </Grid>\r\n            </Paper>\r\n        )}  \r\n    </Grid>\r\n    );\r\n}\r\n\r\nexport default VideoPlayer","import React, { useContext } from 'react'; \r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst Notifications = () => {\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n\r\n    return (\r\n        <>\r\n            {call.isReceivedCall && !callAccepted && (\r\n                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <h1>{call.name} is calling: </h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                        Answer\r\n                    </Button>\r\n                </div>\r\n            )}\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notifications","import React, { useContext, useState } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  container: {\r\n    width: '600px',\r\n    margin: '35px 0',\r\n    padding: 0,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '80%',\r\n    },\r\n  },\r\n  margin: {\r\n    marginTop: 20,\r\n  },\r\n  padding: {\r\n    padding: 20,\r\n  },\r\n  paper: {\r\n    padding: '10px 20px',\r\n    border: '2px solid black',\r\n  },\r\n}));\r\n\r\nconst Options = ( {children} ) => {\r\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n    const [ idToCall, setIdToCall ] = useState('');\r\n    const classes = useStyles();\r\n    return (\r\n        <container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                  <Grid container className={classes.gridContainer}>\r\n                    <Grid item xs={12} md={6} className={classes.padding}>\r\n                        <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                        <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth/>\r\n                        {console.log(me)}\r\n                        <CopyToClipboard text={me} className={classes.margin}>\r\n                            <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\"/>}>\r\n                               Copy Your ID\r\n                            </Button>\r\n                        </CopyToClipboard>\r\n                    </Grid> \r\n                    <Grid item xs={12} md={6} className={classes.padding}>\r\n                        <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n                        <TextField label=\"ID to Call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth/>\r\n                        {callAccepted && !callEnded ? (\r\n                            <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin}>\r\n                            Hang Up\r\n                            </Button>\r\n                        ) : (\r\n                            <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\r\n                               Call\r\n                            </Button>\r\n                        )}\r\n                    </Grid> \r\n                  </Grid> \r\n                </form>\r\n                {children}  \r\n            </Paper> \r\n        </container>\r\n    )\r\n}\r\n\r\nexport default Options\r\n\r\n","import React from 'react';\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 100px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '600px',\r\n    border: '2px solid black',\r\n\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar className={classes.appBar} positions=\"fixed\" color=\"inherit\">\r\n                <Typography variant=\"h2\" align=\"center\">Video Chat </Typography>\r\n            </AppBar>\r\n\r\n            <VideoPlayer />\r\n            <Options>\r\n              <Notifications />\r\n            </Options>\r\n\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render( \r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}